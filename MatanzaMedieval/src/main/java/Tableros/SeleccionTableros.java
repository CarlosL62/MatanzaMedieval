/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tableros;

import Inventario.Inventario;
import Listas.ListaException;
import Listas.ListaGenerica;
import Partida.Partida;
import com.mycompany.matanzamedieval.Componentes;
import com.mycompany.matanzamedieval.Menu;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author carlo
 */
public class SeleccionTableros extends javax.swing.JFrame {

    /**
     * Creates new form SeleccionTableros
     */
    private Menu menu;
    private Componentes componentes;
    public SeleccionTableros(Componentes componentes, Menu menu) {
        initComponents();
        this.menu = menu;
        this.componentes = componentes;

        // Se carga la lista de tableros
        txtAreaTableros.setText("");

        if (componentes.getTablerosCargados().obtenerSize() == 0) {
            //No hay tableros
            txtAreaTableros.setText("No hay tableros disponibles, crea o carga uno para jugar");
        } else {
            for (int i = 0; i < componentes.getTablerosCargados().obtenerSize(); i++) {
                try {
                    txtAreaTableros.setText(txtAreaTableros.getText() + "\n" + (i + 1) + ". " + componentes.getTablerosCargados().obtenerValor(i).getId());
                } catch (ListaException ex) {
                    Logger.getLogger(SeleccionTableros.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private SeleccionTableros() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlTableros = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaTableros = new javax.swing.JTextArea();
        lblTitulo = new javax.swing.JLabel();
        pnlSeleccionTableros = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnSeleccionarTablero = new javax.swing.JButton();
        txtTableroNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnMayMen = new javax.swing.JButton();
        btnMenMay = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(600, 500));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAreaTableros.setEditable(false);
        txtAreaTableros.setColumns(20);
        txtAreaTableros.setRows(5);
        jScrollPane1.setViewportView(txtAreaTableros);

        lblTitulo.setFont(new java.awt.Font("Dutch801 XBd BT", 0, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 0, 0));
        lblTitulo.setText("Tableros disponibles");

        javax.swing.GroupLayout pnlTablerosLayout = new javax.swing.GroupLayout(pnlTableros);
        pnlTableros.setLayout(pnlTablerosLayout);
        pnlTablerosLayout.setHorizontalGroup(
            pnlTablerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTablerosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTablerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(pnlTablerosLayout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlTablerosLayout.setVerticalGroup(
            pnlTablerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablerosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(pnlTableros, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 400, 400));

        jLabel1.setFont(new java.awt.Font("Dutch801 XBd BT", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("TABLEROS");

        btnSeleccionarTablero.setText("Seleccionar");
        btnSeleccionarTablero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarTableroActionPerformed(evt);
            }
        });

        jLabel3.setText("Tablero No:");

        btnMayMen.setText("Mayor a menor");
        btnMayMen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMayMenActionPerformed(evt);
            }
        });

        btnMenMay.setText("Menor a mayor");
        btnMenMay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenMayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSeleccionTablerosLayout = new javax.swing.GroupLayout(pnlSeleccionTableros);
        pnlSeleccionTableros.setLayout(pnlSeleccionTablerosLayout);
        pnlSeleccionTablerosLayout.setHorizontalGroup(
            pnlSeleccionTablerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSeleccionTablerosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSeleccionTablerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSeleccionarTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlSeleccionTablerosLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTableroNo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSeleccionTablerosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnMayMen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMenMay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSeleccionTablerosLayout.setVerticalGroup(
            pnlSeleccionTablerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSeleccionTablerosLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(pnlSeleccionTablerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTableroNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSeleccionarTablero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(btnMayMen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenMay)
                .addContainerGap())
        );

        jPanel1.add(pnlSeleccionTableros, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 150, 330));

        btnRegresar.setBackground(new java.awt.Color(102, 0, 0));
        btnRegresar.setFont(new java.awt.Font("Dutch801 XBd BT", 0, 14)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, 120, -1));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.jpeg"))); // NOI18N
        jPanel1.add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed

        menu.setLocationRelativeTo(null);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnSeleccionarTableroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarTableroActionPerformed
        // Verificación que la casilla no este vacía y sea válida
        boolean error = false;
        Inventario inventario = null;
        int opcion = 0;

        try {
            if (txtTableroNo.getText().equals("")) {
                error = true;
            } else{
                opcion = Integer.parseInt(txtTableroNo.getText()) - 1;
            }
        } catch (Exception e) {
            error = true;
            JOptionPane.showMessageDialog(this, "Asegurese de ingresar un número válido", "Valor inválido", JOptionPane.INFORMATION_MESSAGE);
        }
        
        //Si la opcion es válida, se verifica que este dentro del rango de tableros guardados
        if (!error) {
            if (opcion < 0 || opcion >= componentes.getTablerosCargados().obtenerSize()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar un número válido", "Valor inválido", JOptionPane.INFORMATION_MESSAGE);
            } else{
                //Se crea una nueva partida
                inventario = new Inventario(componentes,opcion, menu);
                inventario.setLocationRelativeTo(null);
                inventario.setVisible(true);
                this.dispose();
            }
        }

        
    }//GEN-LAST:event_btnSeleccionarTableroActionPerformed

    private void btnMayMenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMayMenActionPerformed
        mostrarTableros(ordenamientoTableros(0));
    }//GEN-LAST:event_btnMayMenActionPerformed

    private void btnMenMayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenMayActionPerformed
       mostrarTableros(ordenamientoTableros(1));
    }//GEN-LAST:event_btnMenMayActionPerformed

    public void mostrarTableros(Tableros[] tableros){
        if (componentes.getTablerosCargados().obtenerSize() == 0) {
            //No hay tableros
            txtAreaTableros.setText("No hay tableros disponibles, crea o carga uno para jugar");
        } else {
            txtAreaTableros.setText("");
            for (int i = 0; i < tableros.length; i++) {
                txtAreaTableros.setText(txtAreaTableros.getText() + "\n" + (i + 1) + ". " + tableros[i].getId());
            }
        }
    }
    
    public Tableros[] ordenamientoTableros(int opcion) {
        
        Tableros[] tablerosOrdenado = new Tableros[componentes.getTablerosCargados().obtenerSize()];
        
//        for (int i = 0; i < componentes.getTablerosCargados().obtenerSize(); i++) {
//            if (puntajes[i] != null) {
//                String[] puntosTexto = puntajes[i].split("___");
//                puntos[i] = Integer.parseInt(puntosTexto[1]);
//            } else {
//                break;
//            }
//        }

        boolean hayCambios;
        Tableros auxiliar;
        // opcion = 0 = Mayor a menor | opcion = 1 = Menor a mayor
        if (opcion == 0) {
            do {
                hayCambios = false;
                for (int i = 1; i <= componentes.getTablerosCargados().obtenerSize()-1; i++) {
                    int tamañoTotalSig = 0;
                    int tamañoTotal = 0;
                    try {
                        tamañoTotalSig = componentes.getTablerosCargados().obtenerValor(i+1).getFilas() * componentes.getTablerosCargados().obtenerValor(i+1).getColumnas();
                        tamañoTotal = componentes.getTablerosCargados().obtenerValor(i).getFilas() * componentes.getTablerosCargados().obtenerValor(i).getColumnas();
                    } catch (ListaException ex) {
                        Logger.getLogger(SeleccionTableros.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    if (tamañoTotalSig > tamañoTotal) {
                        try {
                            auxiliar = componentes.getTablerosCargados().obtenerValor(i);
                            //auxiliarTexto = puntajes[i];
                            tablerosOrdenado[i] = componentes.getTablerosCargados().obtenerValor(i+1);
                            //puntajes[i] = puntajes[i + 1];
                            tablerosOrdenado[i + 1] = auxiliar;
                            //puntajes[i + 1] = auxiliarTexto;
                            hayCambios = true;
                        } catch (ListaException ex) {
                            Logger.getLogger(SeleccionTableros.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            } while (hayCambios);
        } else if (opcion == 1) {
            do {
                hayCambios = false;
                for (int i = 0; i < componentes.getTablerosCargados().obtenerSize() - 1; i++) {
                    
                    int tamañoTotalSig = 0;
                    int tamañoTotal = 0;
                    try {
                        tamañoTotalSig = componentes.getTablerosCargados().obtenerValor(i+1).getFilas() * componentes.getTablerosCargados().obtenerValor(i+1).getColumnas();
                        tamañoTotal = componentes.getTablerosCargados().obtenerValor(i).getFilas() * componentes.getTablerosCargados().obtenerValor(i).getColumnas();
                    } catch (ListaException ex) {
                        Logger.getLogger(SeleccionTableros.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    if (tamañoTotalSig != 0) {
                        if (tamañoTotalSig < tamañoTotal) {
                            try {
                                auxiliar = componentes.getTablerosCargados().obtenerValor(i);
                                //auxiliarTexto = puntajes[i];
                                tablerosOrdenado[i] = componentes.getTablerosCargados().obtenerValor(i+1);
                                //puntajes[i] = puntajes[i + 1];
                                tablerosOrdenado[i + 1] = auxiliar;
                                //puntajes[i + 1] = auxiliarTexto;
                                hayCambios = true;
                            } catch (ListaException ex) {
                                Logger.getLogger(SeleccionTableros.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                }
            } while (hayCambios);
        }

        return tablerosOrdenado;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeleccionTableros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeleccionTableros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeleccionTableros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeleccionTableros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeleccionTableros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMayMen;
    private javax.swing.JButton btnMenMay;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSeleccionarTablero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlSeleccionTableros;
    private javax.swing.JPanel pnlTableros;
    private javax.swing.JTextArea txtAreaTableros;
    private javax.swing.JTextField txtTableroNo;
    // End of variables declaration//GEN-END:variables
}
